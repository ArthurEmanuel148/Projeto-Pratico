// src/app/funcionalidades/gerenciamento-funcionarios/components/permissoes-funcionario/permissoes-funcionario.component.scss

// Estilos para o cabeçalho interno do modal
.modal-header {
    border-bottom: 1px solid var(--ion-color-step-200, #e6e6e6);
    // O padding já está sendo aplicado via classes ion-padding-* no HTML,
    // mas você pode ajustar aqui se precisar.
    // padding-bottom: 8px; // Reduzido se o <p> já tiver margem

    .modal-title-text {
        font-size: 1.2em; // Ajuste conforme necessário
        font-weight: 600;
        color: var(--ion-text-color);
        padding-left: 0;
        // ion-title já tem margens, ajuste se necessário.
    }

    .description-text {
        font-size: 0.9em;
        color: var(--ion-color-medium-text);
        margin-top: 4px; // Pequeno espaço acima da descrição
    }
}

// Estilos para o ion-content DENTRO do modal
// Este é o contêiner principal para a lista rolável
ion-content {
    // --background: lightyellow; // Teste para ver a área
    // O padding já está sendo aplicado via classe ion-padding-horizontal no HTML.
    // Esta parte é crucial para permitir que a lista cresça e role
    // O Ionic geralmente lida bem com o scroll do ion-content,
    // desde que seus pais tenham um layout que o permita.
    // Se o conteúdo for cortado, pode ser necessário algo como:
    // position: relative; // Ou static, dependendo do contexto dos pais
    // display: block;
}

// Estilos para o spinner e mensagem de lista vazia
.loading-container,
.empty-list-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    // Tenta centralizar dentro do espaço disponível do ion-content.
    // Se ion-content tiver scroll, pode ser melhor dar um min-height aqui.
    min-height: 150px;
    text-align: center;
    color: var(--ion-color-medium-text);

    ion-spinner {
        margin-bottom: 16px;
    }

    ion-icon {
        font-size: 2.5em;
        margin-bottom: 8px;
    }

    p {
        font-size: 0.95em;
    }
}

// Estilos para os itens da lista de permissões
.permissao-item {
    --padding-start: 0; // Ajustado para usar o padding da ion-content ou da lista
    --inner-padding-end: 0; // Ajustado
    border-bottom: 1px solid var(--ion-color-step-150, #f0f0f0);
    padding-top: 10px; // Ajustado
    padding-bottom: 10px; // Ajustado

    &:last-child {
        border-bottom: none;
    }

    ion-label {
        white-space: normal;
        flex: 1; // Permite que o label ocupe o espaço disponível
        margin-right: 8px; // Espaço antes do toggle

        h3 {
            font-size: 1em;
            font-weight: 500;
            color: var(--ion-text-color);
            margin-top: 0; // Removido para melhor alinhamento
            margin-bottom: 4px;
        }

        p.item-description {
            font-size: 0.8em;
            color: var(--ion-color-medium-text);
            line-height: 1.3;
            margin-top: 0;
        }
    }

    ion-toggle {
        // Variáveis para as cores do toggle quando está checado
        --handle-background-checked: var(--ion-color-danger-contrast);
        --background-checked: var(--ion-color-danger);
        // Ajusta o tamanho se necessário (o padrão do Ionic geralmente é bom)
    }
}

// Estilos para as ações (botões) no rodapé do modal
.modal-actions {
    border-top: 1px solid var(--ion-color-step-200, #e6e6e6);
    // O padding já é aplicado via classe ion-padding no ion-footer do HTML.
    // background: var(--ion-toolbar-background-transparent, transparent); // Removido, ion-toolbar lida com isso
}

// Ajustes para a toolbar dentro do ion-footer do modal
ion-footer ion-toolbar {
    --background: var(--ion-background-color); // Para combinar com o fundo do modal ou tema
    --padding-start: 8px;
    --padding-end: 8px;
    --padding-top: 4px;
    --padding-bottom: 4px;
    min-height: auto;

    ion-button {
        font-weight: 500;
    }
}

// Classe para áreas com preenchimento seguro (para iPhone X etc.)
.safe-area-bottom {
    // O ion-padding no ion-footer pode já lidar com isso,
    // mas manter não prejudica.
    padding-bottom: constant(safe-area-inset-bottom);
    padding-bottom: env(safe-area-inset-bottom); }